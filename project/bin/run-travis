#!/usr/bin/env bash
# Licensed under the Apache License, Version 2.0
# Adapted from paulp/psp-std
# https://github.com/paulp/psp-std/blob/master/project/bin/run-travis

runTests () {
  sbt $TRAVIS_SCALA_VERSION test || exit 1
  echo "[info] $(date) - finished sbt test"

  # Tricks to avoid unnecessary cache updates
  find "$HOME/.sbt" -name "*.lock" -print0 | xargs -0 rm
  find "$HOME/.ivy2" -name "ivydata-*.properties" -print0 | xargs -0 rm
  exit 0
}

stripTerminalEscapeCodes () {
  sed -E 's/\x1B\[[0-9;]*[JKmsu]//g'
}

mkRegex () { ( IFS="|" && echo "$*" ); }

filterOutput() {
  # sbt output filter
  local excludeRegex=$(mkRegex \
    '\[info\] (Resolving|Loading|Updating|Packaging|Done updating)' \
    '\[info\] Formatting [0-9]+ (Scala|Java) sources' \
    '[.]bintray[/][.]credentials' \
    're[-]run with .* for details' \
    'ignoring option MaxPermSize' \
    '^\[info\][ ]*$' \
    '^\[info\] \[info\]' \
    '^\[info\] (Reading|Generating|Waiting|Written)\b' \
    '^downloading http.*\.jar' \
    '^\[info\] \[SUCCESSFUL[ ]*\].*\.jar'
  )
  while read line; do
    if ! [[ $(echo $line | stripTerminalEscapeCodes) =~ $excludeRegex ]] ; then
      echo "$line"
    fi
  done
}

main() {
  echo "[info] $(date) - starting sbt test"
  (set -o pipefail && runTests 2>&1 | filterOutput)
}

echo "[info] $(uname -a)"
main "$@"

